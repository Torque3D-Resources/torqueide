<?xml version="1.0"?>

<!DOCTYPE MODE SYSTEM "xmode.dtd">

<MODE>
	<PROPS>
		<PROPERTY NAME="indentOpenBrackets" VALUE="{" />
		<PROPERTY NAME="indentCloseBrackets" VALUE="}" />
		<!-- <PROPERTY NAME="unalignedOpenBrackets" VALUE="(" />
		<PROPERTY NAME="unalignedCloseBrackets" VALUE=")" /> -->
		<PROPERTY NAME="indentPrevLine"
			VALUE="\s*(((if|while)\s*\(|else\s*(\{|$)|else\s+if\s*\(|case\s+.+:|default:)[^;]*|for\s*\(.*)" />
		<!-- set this to 'true' if you want to use GNU coding style -->
		<!-- <PROPERTY NAME="doubleBracketIndent" VALUE="false" /> -->
		<PROPERTY NAME="commentStart" VALUE="/*" />
		<PROPERTY NAME="commentEnd" VALUE="*/" />
		<PROPERTY NAME="lineComment" VALUE="//" />
		<PROPERTY NAME="wordBreakChars" VALUE=",+-=&lt;&gt;/?^&amp;*" />
	</PROPS>
	<RULES 
		IGNORE_CASE="FALSE" 
		HIGHLIGHT_DIGITS="TRUE"
		DIGIT_RE="(0x[[:xdigit:]]+[lL]?|[[:digit:]]+(e[[:digit:]]*)?[lLdDfF]?)">

		<!-- whitespace: (space and tab) -->
		<WHITESPACE> </WHITESPACE>
		<WHITESPACE>	</WHITESPACE>


		<SPAN TYPE="LITERAL1" NO_LINE_BREAK="TRUE">
			<BEGIN>"</BEGIN>
			<END>"</END>
		</SPAN>
		<SPAN TYPE="LITERAL1" NO_LINE_BREAK="TRUE">
			<BEGIN>'</BEGIN>
			<END>'</END>
		</SPAN>

		<!-- preprocessor statements -->
		<EOL_SPAN TYPE="COMMENT1">//</EOL_SPAN>
		
		<!-- Operators -->
		<SEQ TYPE="OPERATOR">=</SEQ>
		<SEQ TYPE="OPERATOR">+</SEQ>
		<SEQ TYPE="OPERATOR">-</SEQ>
		<SEQ TYPE="OPERATOR">*</SEQ>
		<SEQ TYPE="OPERATOR">/</SEQ>
		<!-- <SEQ TYPE="OPERATOR">%</SEQ> -->
		<SEQ TYPE="OPERATOR">++</SEQ>
		<SEQ TYPE="OPERATOR">--</SEQ>
		<SEQ TYPE="OPERATOR">+=</SEQ>
		<SEQ TYPE="OPERATOR">-=</SEQ>
		<SEQ TYPE="OPERATOR">*=</SEQ>
		<SEQ TYPE="OPERATOR">/=</SEQ>
		<SEQ TYPE="OPERATOR">%=</SEQ>
		<SEQ TYPE="OPERATOR">@</SEQ>
		<SEQ TYPE="OPERATOR">(</SEQ>
		<SEQ TYPE="OPERATOR">)</SEQ>
		<SEQ TYPE="OPERATOR">[</SEQ>
		<SEQ TYPE="OPERATOR">]</SEQ>
		<SEQ TYPE="OPERATOR">{</SEQ>
		<SEQ TYPE="OPERATOR">}</SEQ>
		<SEQ TYPE="OPERATOR">SPC</SEQ>
		<SEQ TYPE="OPERATOR">TAB</SEQ>
		<SEQ TYPE="OPERATOR">NL</SEQ>
		<SEQ TYPE="OPERATOR">~</SEQ>
		<SEQ TYPE="OPERATOR">|</SEQ>
		<SEQ TYPE="OPERATOR">^</SEQ>
		<SEQ TYPE="OPERATOR">|=</SEQ>
		<SEQ TYPE="OPERATOR">^=</SEQ>
		<SEQ TYPE="OPERATOR">!</SEQ>
		<SEQ TYPE="OPERATOR">||</SEQ>
		<SEQ TYPE="OPERATOR">==</SEQ>
		<SEQ TYPE="OPERATOR">!=</SEQ>
		<SEQ TYPE="OPERATOR">$=</SEQ>
		<SEQ TYPE="OPERATOR">!$=</SEQ>
		<SEQ TYPE="OPERATOR">;</SEQ>
		<SEQ TYPE="OPERATOR">.</SEQ>
		<SEQ TYPE="OPERATOR">,</SEQ>
		<SEQ TYPE="OPERATOR">?</SEQ>
		<SEQ TYPE="OPERATOR">:</SEQ>

		<KEYWORDS IGNORE_CASE="TRUE">
			<KEYWORD1>break</KEYWORD1>
			<KEYWORD1>case</KEYWORD1>
			<KEYWORD1>continue</KEYWORD1>
			<KEYWORD1>datablock</KEYWORD1>
			<KEYWORD1>default</KEYWORD1>
			<KEYWORD1>do</KEYWORD1>
			<KEYWORD1>else</KEYWORD1>
			<KEYWORD1>for</KEYWORD1>
			<KEYWORD1>function</KEYWORD1>
			<KEYWORD1>if</KEYWORD1>
			<KEYWORD1>new</KEYWORD1>
			<KEYWORD1>package</KEYWORD1>
			<KEYWORD1>return</KEYWORD1>
			<KEYWORD1>switch</KEYWORD1>
			<KEYWORD1>while</KEYWORD1>			
			
			<LITERAL2>true</LITERAL2>
			<LITERAL2>false</LITERAL2>
			<LITERAL2>NULL</LITERAL2>
		</KEYWORDS>
		
		<!-- Function calls -->
		<MARK_PREVIOUS TYPE="FUNCTION" EXCLUDE_MATCH="TRUE">(</MARK_PREVIOUS>

		<!-- Variables -->
		<!--
		<SEQ TYPE="KEYWORD2">$`</SEQ>
		<SEQ TYPE="KEYWORD2">$'</SEQ>
		<SEQ TYPE="KEYWORD2">$"</SEQ>
		<SPAN TYPE="KEYWORD2" NO_LINE_BREAK="TRUE" DELEGATE="VARIABLE">
			<BEGIN>${</BEGIN>
			<END>}</END>
		</SPAN>
		-->
		<MARK_FOLLOWING TYPE="KEYWORD2">$</MARK_FOLLOWING>
		<!--
		<SEQ TYPE="KEYWORD3">%`</SEQ>
		<SEQ TYPE="KEYWORD3">%'</SEQ>
		<SEQ TYPE="KEYWORD3">%"</SEQ>
		<SPAN TYPE="KEYWORD3" NO_LINE_BREAK="TRUE" DELEGATE="VARIABLE">
			<BEGIN>%{</BEGIN>
			<END>}</END>
		</SPAN>
		-->
		<MARK_FOLLOWING TYPE="KEYWORD3">%</MARK_FOLLOWING>
		
	</RULES>
</MODE>
